{"version":3,"sources":["components/TodoForm/TodoForm.jsx","components/TodoListItem/TodoListItem.jsx","components/TodoList/TodoList.jsx","mocks/initialTodoList.js","components/App/App.jsx","index.js"],"names":["TodoForm","name","onChange","onSubmit","inputRef","className","type","ref","value","placeholder","Button","variant","TodoListItem","item","handleDelete","toggleTodoItem","todoClass","isDone","isDoneItem","onClick","id","style","marginLeft","event","stopPropagation","TodoList","list","activeList","completeList","forEach","listItem","push","todoItems","App","useRef","useState","setName","setList","useEffect","current","focus","target","preventDefault","trim","newList","uuidv4","addTodo","filter","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAaeA,MATf,YAAyD,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,SAC3C,OACE,uBAAMC,UAAU,cAAcF,SAAUA,EAAxC,UACE,uBAAOG,KAAK,OAAOC,IAAKH,EAAUF,SAAUA,EAAUM,MAAOP,EAAMI,UAAU,eAAeI,YAAY,sBACxG,cAACC,EAAA,EAAD,CAAQC,QAAQ,oBAAoBL,KAAK,SAAzC,qB,wBCsBSM,MA1Bf,YAA6D,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,eACnCC,EAAYH,EAAKI,OAAS,OAAS,SACnCC,EAAaL,EAAKI,OAOxB,OACE,oBAAIZ,UAAU,kBAAkBc,QAAS,kBAAMJ,EAAeF,EAAKO,KAAnE,SACE,sBAAKf,UAAWW,EAAhB,UAEIE,EACE,cAAC,IAAD,IACA,cAAC,IAAD,IAEJ,sBAAMG,MAdK,CAAEC,WAAY,IAczB,SACGT,EAAKL,QAER,wBAAQF,KAAK,SAASD,UAAU,QAAQc,QAhB7B,SAAAI,GACfA,EAAMC,kBACNV,EAAaD,EAAKO,KAcd,wB,MCOOK,MA3Bf,YAA2D,IAAvCC,EAAsC,EAAtCA,KAAMZ,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,eAChCY,EAAa,GACbC,EAAe,GAYrB,OAVAF,EAAKG,SAAQ,SAAAhB,GACX,IAAMiB,EAAW,cAAC,EAAD,CAA4BjB,KAAMA,EAAMC,aAAcA,EAAcC,eAAgBA,GAAjEF,EAAKO,IAEzC,OAAIP,EAAKI,OACAW,EAAaG,KAAKD,GAElBH,EAAWI,KAAKD,MAKzB,gCACE,oBAAIzB,UAAU,aAAd,SACGsB,IAEH,uBACA,oBAAItB,UAAU,aAAd,SACGuB,QCzBHI,EAAY,GAClBA,EAAUD,KAAK,CAACX,GAAI,EAAGZ,MAAO,WAAYS,QAAQ,IAClDe,EAAUD,KAAK,CAACX,GAAI,EAAGZ,MAAO,cAAeS,QAAQ,IACrDe,EAAUD,KAAK,CAACX,GAAI,EAAGZ,MAAO,gBAAiBS,QAAQ,IAExCe,Q,MC2EAC,MAzEf,WACE,IAAM7B,EAAW8B,mBADJ,EAEWC,mBAAS,IAFpB,mBAENlC,EAFM,KAEAmC,EAFA,OAGWD,mBAASH,GAHpB,mBAGNN,EAHM,KAGAW,EAHA,KAuDb,OAlDAC,qBAAU,WACRlC,EAASmC,QAAQC,UAChB,CAACd,IAiDF,sBAAKN,GAAG,OAAR,UACE,oBAAIf,UAAU,QAAd,uBACA,cAAC,EAAD,CACEJ,KAAMA,EACNC,SAnDe,SAAAqB,GACnBa,EAAQb,EAAMkB,OAAOjC,QAmDjBL,SApCW,SAAAoB,GACfA,EAAMmB,iBACDzC,EAAK0C,QACL1C,KAfS,WACd,IAAM2C,EAAO,sBACRlB,GADQ,CAEX,CACEN,GAAIyB,cACJrC,MAAOP,EACPgB,QAAQ,KAGZoB,EAAQO,GAORE,GAEAV,EAAQ,MA+BJhC,SAAUA,IAEZ,cAAC,EAAD,CACEsB,KAAMA,EACNZ,aAhCe,SAAAM,GACnB,IAAMwB,EAAUlB,EAAKqB,QAAO,SAAAlC,GAAI,OAAIA,EAAKO,KAAOA,KAEhDiB,EAAQO,IA8BJ7B,eA3BiB,SAAAK,GACrB,IAAMwB,EAAUlB,EAAKsB,KAAI,SAAAnC,GACvB,OAAIA,EAAKO,KAAOA,EACP,2BACFP,GADL,IAEEI,QAASJ,EAAKI,SAIXJ,KAGTwB,EAAQO,UCrDZK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9035adf1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport './TodoForm.css'\r\n\r\nfunction TodoForm({name, onChange, onSubmit, inputRef}) {\r\n  return (\r\n    <form className='form-inline' onSubmit={onSubmit}>\r\n      <input type='text' ref={inputRef} onChange={onChange} value={name} className='form-control' placeholder='add a new task...'/>\r\n      <Button variant='outline-secondary' type='submit'>Add</Button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default TodoForm;","import React from 'react';\r\nimport './TodoListItem.css'\r\nimport { Check2, Circle } from 'react-bootstrap-icons';\r\n\r\nfunction TodoListItem({item, handleDelete, toggleTodoItem}) {\r\n  const todoClass = item.isDone ? 'done' : 'undone';\r\n  const isDoneItem = item.isDone;\r\n  const svgStyle = { marginLeft: 15 };\r\n  const onDelete = event => {\r\n    event.stopPropagation();\r\n    handleDelete(item.id)\r\n  }\r\n\r\n  return(\r\n    <li className=\"list-group-item\" onClick={() => toggleTodoItem(item.id)}>\r\n      <div className={todoClass}>\r\n        {\r\n          isDoneItem\r\n          ? <Check2 />\r\n          : <Circle />\r\n        }\r\n        <span style={svgStyle}>\r\n          {item.value}\r\n        </span>\r\n        <button type='button' className='close' onClick={onDelete}>&times;</button>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default TodoListItem;","import React from 'react';\r\nimport TodoListItem from '../TodoListItem/TodoListItem'\r\nimport './TodoList.css'\r\n\r\nfunction TodoList({ list, handleDelete, toggleTodoItem }) {\r\n  const activeList = [];\r\n  const completeList = [];\r\n\r\n  list.forEach(item => {\r\n    const listItem = <TodoListItem key={item.id} item={item} handleDelete={handleDelete} toggleTodoItem={toggleTodoItem} />;\r\n    \r\n    if (item.isDone) {\r\n      return completeList.push(listItem)\r\n    } else {\r\n      return activeList.push(listItem)\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <ul className='list-group'>\r\n        {activeList}\r\n      </ul>\r\n      <hr/>\r\n      <ul className='list-group'>\r\n        {completeList}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoList;","const todoItems = [];\r\ntodoItems.push({id: 1, value: \"learn js\", isDone: true});\r\ntodoItems.push({id: 2, value: \"learn react\", isDone: false});\r\ntodoItems.push({id: 3, value: \"learn angular\", isDone: false});\r\n\r\nexport default todoItems;","import React, { useEffect, useRef, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport TodoForm from '../TodoForm/TodoForm'\r\nimport TodoList from '../TodoList/TodoList';\r\nimport todoItems from '../../mocks/initialTodoList';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const inputRef = useRef();\r\n  const [name, setName] = useState('');\r\n  const [list, setList] = useState(todoItems);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  }, [list])\r\n\r\n  const handleChange = event => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const addTodo = () => {\r\n    const newList = [\r\n      ...list,\r\n      {\r\n        id: uuidv4(),\r\n        value: name,\r\n        isDone: false\r\n      }\r\n    ];\r\n    setList(newList);\r\n  };\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    if (!name.trim()) return;\r\n    if (!name) return;\r\n    addTodo();\r\n\r\n    setName('');\r\n  }\r\n\r\n  const handleDelete = id => {\r\n    const newList = list.filter(item => item.id !== id);\r\n\r\n    setList(newList);\r\n  }\r\n\r\n  const toggleTodoItem = id => {\r\n    const newList = list.map(item => {\r\n      if (item.id === id) {\r\n        return {\r\n          ...item,\r\n          isDone: !item.isDone\r\n        };\r\n      }\r\n\r\n      return item\r\n    });\r\n\r\n    setList(newList);\r\n  }\r\n\r\n  return (\r\n    <div id=\"main\">\r\n      <h1 className='title'>Todo list</h1>\r\n      <TodoForm\r\n        name={name}\r\n        onChange={handleChange}\r\n        onSubmit={onSubmit}\r\n        inputRef={inputRef}\r\n      />\r\n      <TodoList\r\n        list={list}\r\n        handleDelete={handleDelete}\r\n        toggleTodoItem={toggleTodoItem}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}